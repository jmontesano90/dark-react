{"version":3,"sources":["ResultContext.js","input/ValidationError.js","input/InputBox.js","results/Results.js","calculations.js","Nav.js","additionalInfo/What.js","additionalInfo/How.js","App.js","index.js"],"names":["ResultContext","React","createContext","results","ValidationError","props","message","className","InputBox","state","result","black","value","touched","blue","orange","modifier","desiredRoll","nameOfRoll","handleChange","bind","event","this","target","name","toString","setState","onlyNumbers","isNaN","validation","preventDefault","context","addResult","document","getElementById","onSubmit","e","handleSubmit","htmlFor","type","id","placeholder","onChange","validateNumberInputs","additionalDiceValidation","validateDice","src","alt","width","height","disabled","Component","contextType","Results","handleClickDelete","removeResult","plus","rollInfo","onClick","style","display","mode","median","average","variance","percentRoll","blackDice","blueDice","orangeDice","diceRoll","dice","Math","random","round","simulateRolls","blackTotal","i","blueTotal","j","orangeTotal","k","rolls","u","length","sort","a","b","numberCounts","y","number","numberCount","push","Nav","to","How","App","handleAddResult","math","cumulativeRolls","mean","averageRoll","calculateStats","parseInt","unshift","handleDeleteResult","temp","splice","Provider","exact","path","component","What","map","index","key","ReactDOM","render"],"mappings":"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","file":"static/js/main.935d218e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ResultContext = React.createContext({\r\n    results: []\r\n})\r\n\r\nexport default ResultContext","import React from \"react\";\r\nimport \"./InputBox.css\";\r\n\r\nexport default function ValidationError(props) {\r\n  if (props.message) {\r\n    return <div className=\"error\">{props.message}</div>;\r\n  }\r\n\r\n  return <></>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ResultContext from \"../ResultContext\";\r\nimport \"./InputBox.css\";\r\nimport ValidationError from \"./ValidationError\";\r\n\r\nclass InputBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: {\r\n        black: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        blue: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        orange: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        modifier: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        desiredRoll: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        nameOfRoll: \"\",\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let result = { ...this.state.result };\r\n    result[event.target.name.toString()] = {\r\n      value: event.target.value,\r\n      touched: true,\r\n    };\r\n    this.setState(\r\n      {\r\n        result,\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  validateDice() {\r\n    if (\r\n      this.state.result.black.touched === false &&\r\n      this.state.result.blue.touched === false &&\r\n      this.state.result.orange.touched === false\r\n    ) {\r\n      return \"At least one dice must be selected\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  validateNumberInputs() {\r\n    let onlyNumbers = true;\r\n    if (isNaN(this.state.result.black.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.result.blue.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.result.orange.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.result.modifier.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (isNaN(this.state.result.desiredRoll.value)) {\r\n      onlyNumbers = false;\r\n    }\r\n    if (onlyNumbers === false) {\r\n      return \"All inputs must be numbers\";\r\n    }\r\n  }\r\n\r\n  additionalDiceValidation() {\r\n    let validation = false;\r\n    if (this.state.result.modifier.touched === true) {\r\n      validation = true;\r\n    } else if (this.state.result.desiredRoll.touched === true) {\r\n      validation = true;\r\n    } else if (this.state.result.nameOfRoll.touched === true) {\r\n      validation = true;\r\n    }\r\n    return validation;\r\n  }\r\n\r\n  static contextType = ResultContext;\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.context.addResult(this.state.result);\r\n    this.setState({\r\n      result: {\r\n        black: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        blue: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        orange: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        modifier: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        desiredRoll: {\r\n          value: \"0\",\r\n          touched: false,\r\n        },\r\n        nameOfRoll: \"\",\r\n      },\r\n    });\r\n    document.getElementById(\"black\").value = \"\";\r\n    document.getElementById(\"blue\").value = \"\";\r\n    document.getElementById(\"orange\").value = \"\";\r\n    document.getElementById(\"modifier\").value = \"\";\r\n    document.getElementById(\"desiredRoll\").value = \"\";\r\n    document.getElementById(\"nameOfRoll\").value = \"\";\r\n  }\r\n  rend;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inputForm\">\r\n        <form className=\"newResult\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <h2>Dice being rolled</h2>\r\n          <div className=\"colors\">\r\n            <label htmlFor=\"black\" className=\"black color\">\r\n              Black:\r\n            </label>\r\n            <input\r\n              className=\"colorInput\"\r\n              type=\"text\"\r\n              name=\"black\"\r\n              id=\"black\"\r\n              placeholder=\"0\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n\r\n            <label htmlFor=\"blue\" className=\"blue color\">\r\n              Blue:\r\n            </label>\r\n            <input\r\n              className=\"colorInput\"\r\n              type=\"text\"\r\n              name=\"blue\"\r\n              id=\"blue\"\r\n              placeholder=\"0\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n\r\n            <label htmlFor=\"orange\" className=\"orange color\">\r\n              Orange:\r\n            </label>\r\n            <input\r\n              className=\"colorInput\"\r\n              type=\"text\"\r\n              name=\"orange\"\r\n              id=\"orange\"\r\n              placeholder=\"0\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"additionalInput\">\r\n            <label htmlFor=\"modifier\" className=\"additional\">\r\n              Modifier:\r\n            </label>\r\n            <input\r\n              className=\"modifier\"\r\n              type=\"text\"\r\n              name=\"modifier\"\r\n              id=\"modifier\"\r\n              placeholder=\"0\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n\r\n            <label htmlFor=\"desiredRoll\" className=\"additional\">\r\n              Desired Roll:\r\n            </label>\r\n            <input\r\n              className=\"otherInput\"\r\n              type=\"text\"\r\n              name=\"desiredRoll\"\r\n              id=\"desiredRoll\"\r\n              placeholder=\"0\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"bottomInput\">\r\n            <label htmlFor=\"nameOfRoll\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nameOfRoll\"\r\n                id=\"nameOfRoll\"\r\n                placeholder=\"Name of Roll\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n            <ValidationError message={this.validateNumberInputs()} />\r\n            {this.additionalDiceValidation() && (\r\n              <ValidationError message={this.validateDice()} />\r\n            )}\r\n            <input\r\n              type=\"image\"\r\n              src=\"https://imgur.com/fFV9HS6.png\"\r\n              alt=\"initialzie button\"\r\n              className=\"rollButton\"\r\n              width=\"224\"\r\n              height=\"29\"\r\n              disabled={this.validateNumberInputs() || this.validateDice()}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputBox;\r\n","import React, { Component } from \"react\";\r\nimport ResultContext from \"../ResultContext\";\r\nimport \"./Results.css\";\r\n\r\nclass Results extends Component {\r\n  handleClickDelete = (e) => {\r\n    e.preventDefault();\r\n    this.context.removeResult(this.props.id);\r\n  };\r\n\r\n  static contextType = ResultContext;\r\n\r\n  render() {\r\n    let plus;\r\n    if (this.props.results.rollInfo.modifier.value < 0) {\r\n      plus = \"\";\r\n    } else {\r\n      plus = \"+\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"results\">\r\n        <input\r\n          type=\"image\"\r\n          src=\"https://imgur.com/FyZgoKZ.png\"\r\n          alt=\"initialzie button\"\r\n          className=\"deleteButton\"\r\n          width=\"35\"\r\n          height=\"35\"\r\n          onClick={this.handleClickDelete}\r\n        />\r\n        <h3\r\n          style={{\r\n            display: this.props.results.rollInfo.nameOfRoll.value\r\n              ? \"block\"\r\n              : \"none\",\r\n          }}\r\n        >\r\n          {this.props.results.rollInfo.nameOfRoll.value}\r\n        </h3>\r\n        <div className=\"diceInputted\">\r\n          <span\r\n            style={{\r\n              display: this.props.results.rollInfo.black.touched\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n          >\r\n            {this.props.results.rollInfo.black.value}{\" \"}\r\n            <span className=\"black\">Black</span> dice\r\n          </span>\r\n\r\n          <span\r\n            style={{\r\n              display: this.props.results.rollInfo.blue.touched\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n          >\r\n            {this.props.results.rollInfo.blue.value}{\" \"}\r\n            <span className=\"blue\">Blue</span> dice\r\n          </span>\r\n\r\n          <span\r\n            style={{\r\n              display: this.props.results.rollInfo.orange.touched\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n          >\r\n            {this.props.results.rollInfo.orange.value}{\" \"}\r\n            <span className=\"orange\">Orange</span> dice\r\n          </span>\r\n\r\n          <span\r\n            style={{\r\n              display: this.props.results.rollInfo.modifier.touched\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n          >\r\n            {plus}\r\n            {this.props.results.rollInfo.modifier.value} modifier\r\n          </span>\r\n        </div>\r\n        <div className=\"result\">\r\n          <span className=\"title\">Mode: </span>\r\n          <span className=\"calculation\">{this.props.results.mode}</span>\r\n        </div>\r\n        <div className=\"result\">\r\n          <span className=\"title\">Median: </span>\r\n          <span className=\"calculation\">{this.props.results.median}</span>\r\n        </div>\r\n        <div className=\"result\">\r\n          <span className=\"title\">Average: </span>\r\n          <span className=\"calculation\">{this.props.results.average}</span>\r\n        </div>\r\n        <div className=\"result\">\r\n          <span className=\"title\">Variance: </span>\r\n          <span className=\"calculation\">{this.props.results.variance}</span>\r\n        </div>\r\n        <div\r\n          className=\"result\"\r\n          style={{ display: this.props.results.percentRoll ? \"block\" : \"none\" }}\r\n        >\r\n          <span className=\"title\">Success Rate: </span>\r\n          <span className=\"calculation\">\r\n            {this.props.results.percentRoll}% to roll a{\" \"}\r\n            {this.props.results.rollInfo.desiredRoll.value}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","const blackDice = [0, 1, 1, 1, 2, 2];\r\nconst blueDice = [1, 1, 2, 2, 2, 3];\r\nconst orangeDice = [1, 2, 2, 3, 3, 4];\r\n\r\nfunction diceRoll() {\r\n  let dice = Math.random() * 6 - 0.5;\r\n  dice = Math.round(dice);\r\n  return dice;\r\n  // $('.mode').text(dice);\r\n  //simulates a dice roll\r\n}\r\n\r\nfunction simulateRolls(black, blue, orange, modifier) {\r\n  let blackTotal = 0;\r\n  let i = 0;\r\n  for (i = 0; i !== black; i++) {\r\n    blackTotal += blackDice[diceRoll()];\r\n  }\r\n  let blueTotal = 0;\r\n  let j = 0;\r\n  for (j = 0; j !== blue; j++) {\r\n    blueTotal += blueDice[diceRoll()];\r\n  }\r\n  let orangeTotal = 0;\r\n  let k = 0;\r\n  for (k = 0; k !== orange; k++) {\r\n    orangeTotal += orangeDice[diceRoll()];\r\n  }\r\n\r\n  return blackTotal + blueTotal + orangeTotal + modifier;\r\n}\r\n\r\nfunction average(rolls) {\r\n  let averageRoll = 0;\r\n  let i = 0;\r\n  for (i = 0; i < rolls.length; i++) {\r\n    averageRoll += rolls[i];\r\n  }\r\n  return averageRoll / rolls.length;\r\n}\r\n\r\nfunction median(rolls) {\r\n  rolls.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  return rolls[rolls.length / 2];\r\n}\r\n\r\nfunction variance(rolls, average) {\r\n  let u = 0;\r\n  // rolls2 = runFiftyRolls();\r\n  let variance = 0;\r\n  while (u < rolls.length) {\r\n    variance += (average - rolls[u]) ** 2;\r\n    u++;\r\n  }\r\n  return Math.round(1000 * (variance / rolls.length)) / 1000;\r\n}\r\n\r\nfunction percentRoll(rolls, desiredRoll) {\r\n  if (desiredRoll === 0) {\r\n    return false;\r\n  } else {\r\n    rolls.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let i = 0;\r\n    for (i = 0; desiredRoll !== rolls[i] && i < rolls.length; i++) {}\r\n    return (rolls.length - i) / 50;\r\n  }\r\n}\r\n\r\nfunction mode(rolls) {\r\n  const numberCounts = [];\r\n\r\n  let i = 0;\r\n  for (i = 0; i < rolls.length; i++) {\r\n    let y = 0;\r\n    while (y < numberCounts.length) {\r\n      if (numberCounts[y].number === rolls[i]) {\r\n        numberCounts[y].numberCount += 1;\r\n        break;\r\n        //check numberCounts to see if this roll has already been seen before, if it has increment the numberCount, break out of the loop\r\n      }\r\n      y++;\r\n    }\r\n    if (y === numberCounts.length) {\r\n      numberCounts.push({\r\n        number: rolls[i],\r\n        numberCount: 1,\r\n      });\r\n    } // if this roll was not added previously, it will be added here.  If y == numberCounts.length that means it went all the way to the end of the array and did not add it, meaning we have to add it.\r\n  }\r\n  numberCounts.sort(function (a, b) {\r\n    return b.numberCount - a.numberCount;\r\n  });\r\n  return numberCounts[0].number;\r\n}\r\n\r\nexport function calculateStats(black, blue, orange, modifier, desiredRoll) {\r\n  let cumulativeRolls = [];\r\n  let i = 0;\r\n  for (i = 0; i < 5000; i++) {\r\n    cumulativeRolls.push(simulateRolls(black, blue, orange, modifier));\r\n  }\r\n\r\n  let mean = average(cumulativeRolls);\r\n\r\n  let calculations = {\r\n    average: mean,\r\n    median: median(cumulativeRolls),\r\n    variance: variance(cumulativeRolls, mean),\r\n    percentRoll: percentRoll(cumulativeRolls, desiredRoll),\r\n    mode: mode(cumulativeRolls),\r\n  };\r\n\r\n  return calculations;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <ul>\r\n          <li className=\"Home\">\r\n            <Link to=\"/dark-react/\">Home</Link>\r\n          </li>\r\n          <li className=\"what\">\r\n            <Link to=\"/dark-react/what\">What is this?</Link>\r\n          </li>\r\n          <li className=\"how\">\r\n            <Link to=\"/dark-react/how\">How does this work?</Link>\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"./additional.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navInfo\">\r\n        <h2>How does this work?</h2>\r\n        <p>\r\n          Dark Rolls simulates 5000 rolls based on the amount of die you\r\n          entered, and your preferred minimum roll. Then based on those rolls,\r\n          will give you the accompanying statistics. This does lead to a natural\r\n          variation in every time you click the button, so theres no need to\r\n          panic when you witness this. Could I just have used math to calculate\r\n          the stats? Yeah but thats boring.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"./additional.css\";\r\n\r\nclass How extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navInfo\">\r\n        <h2>What is this?</h2>\r\n        <p>\r\n          Dark Rolls is meant to be used in conjunction with the Dark Souls\r\n          board game. Lets say you can't decide what gear you should upgrade\r\n          for, or you need to decide who should attack and who should back off.\r\n          Is 3 blacks and a -1 modifier better than a blue and a +1? I hope this\r\n          site helps answer those on the fly questions, best of luck Ashen Ones!\r\n        </p>\r\n        <p>\r\n          Dark Rolls also works on mobile. I assumed most people wouldn't drag\r\n          their PC to their board game sessions, but hey whatever works.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default How;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ResultContext from \"./ResultContext\";\nimport InputBox from \"./input/InputBox\";\nimport Results from \"./results/Results\";\nimport { calculateStats } from \"./calculations\";\nimport Nav from \"./Nav\";\nimport What from \"./additionalInfo/What\";\nimport How from \"./additionalInfo/How\";\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n    };\n  }\n\n  handleAddResult = (result) => {\n    let math = calculateStats(\n      parseInt(result.black.value),\n      parseInt(result.blue.value),\n      parseInt(result.orange.value),\n      parseInt(result.modifier.value),\n      parseInt(result.desiredRoll.value)\n    );\n    math.rollInfo = result;\n    this.state.results.unshift(math);\n    this.setState({\n      results: this.state.results,\n    });\n  };\n\n  handleDeleteResult = (id) => {\n    let temp = this.state.results;\n    temp.splice(id, 1);\n    this.setState({\n      results: temp,\n    });\n  };\n\n  render() {\n    const value = {\n      results: this.state.results,\n      addResult: this.handleAddResult,\n      removeResult: this.handleDeleteResult,\n    };\n    return (\n      <ResultContext.Provider value={value}>\n        <main>\n          <Nav />\n          <h1>Dark Rolls</h1>\n          <Route exact path=\"/dark-react/\" component={InputBox} />\n          <Route exact path=\"/dark-react/what\" component={What} />\n          <Route exact path=\"/dark-react/how\" component={How} />\n          {this.state.results.map((result, index) => (\n            <Results results={result} key={index} id={index} />\n          ))}\n        </main>\n      </ResultContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}